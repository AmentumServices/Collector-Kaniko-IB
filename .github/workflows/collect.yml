name: Kaniko IB Collector
run-name: ${{ github.actor }} is Collecting ðŸš€
on:
  push:
    branches:
      - main
  schedule:
    - cron: "0 0 * * 1" # Update weekly on Monday Midnight
  workflow_dispatch:

jobs:
  Date:
    runs-on: ubuntu-latest
    outputs:
      Date: ${{ steps.date.outputs.date }}
    steps:
      - name: Get current date
        id: DATE
        run: |
          echo "DATE=$(date '+%Y%m%d-%H%M')" >> $GITHUB_OUTPUT
          echo -e "\n$GITHUB_OUTPUT\n"
          cat $GITHUB_OUTPUT

  Skopeo:
    needs: [Date]
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Install Skopeo
        run: |
          sudo apt-get update -y
          sudo apt-get install -y skopeo pigz

      - name: DSO Login
        run: |
          skopeo login registry1.dso.mil -u ${{ secrets.REGISTRY_USER }} -p ${{ secrets.REGISTRY_TOKEN }}

      - name: Run Skopeo Sync
        run: |
          skopeo sync \
              --src yaml --dest dir ${{ vars.COLLECTOR }}.yml ${{ vars.COLLECTOR }}

      - name: Directory Contents
        run: |
          echo "Directory Contents"
          ls -lAhS *
          echo -e "\nDirectory Size"
          du -hd1 

      - name: TARchive Skopeo Output
        run: |
          tar -cv -Ipigz --remove-files \
            -f ${{ vars.COLLECTOR }}-${{ needs.Date.outputs.Date }}.tgz ${{ vars.COLLECTOR }}
          ls -Alh ${{ vars.COLLECTOR }}-${{ needs.Date.outputs.Date }}.tgz

      - name: Upload TARchive
        uses: actions/upload-artifact@v4
        with:
          name: ${{ vars.COLLECTOR }}-${{ needs.Date.outputs.Date }}.tgz
          path: ${{ vars.COLLECTOR }}-${{ needs.Date.outputs.Date }}.tgz

  Code:
    needs: [Date]
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Setup Git
        run: |
          git config user.name "$(git log -n 1 --pretty=format:%an)"
          git config user.email "$(git log -n 1 --pretty=format:%ae)"

      - name: Update Submodules if needed
        shell: bash
        run: git submodule update --init --recursive --remote

      - name: Bundle Repo1 code base for ${{ vars.COLLECTOR }}
        run: |
          git bundle create --progress ${{ vars.COLLECTOR }}-${{ needs.Date.outputs.Date }}.bundle --all
          ls -Alht *

      - name: Upload bundle
        uses: actions/upload-artifact@v4
        with:
          name: ${{ vars.COLLECTOR }}-${{ needs.Date.outputs.Date }}.bundle
          path: ${{ vars.COLLECTOR }}-${{ needs.Date.outputs.Date }}.bundle

  MakeISO:
    runs-on: ubuntu-latest
    needs: [Date, Code, Skopeo]
    permissions:
      contents: write
      pull-requests: read
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Install mkisofs
        run: |
          sudo apt-get update -y
          sudo apt-get install -y mkisofs isomd5sum

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true

      - name: Show Artifacts
        run: ls -Alh ${{ vars.COLLECTOR }}-*.*

      - name: Generate Artifact Hash File
        run: |
          sha256sum -b ${{ vars.COLLECTOR }}-${{ needs.Date.outputs.Date }}* | tee \
            ${{ vars.COLLECTOR }}-${{ needs.Date.outputs.Date }}.sha
          

      - name: Upload Artifact Hash File
        uses: actions/upload-artifact@v4
        with:
          name: ${{ vars.COLLECTOR }}-${{ needs.Date.outputs.Date }}.sha
          path: ${{ vars.COLLECTOR }}-${{ needs.Date.outputs.Date }}.sha

      - name: Make ISO
        run: |
          mkisofs -J -R -v -T -l \
            -V '${{ vars.COLLECTOR }}-${{ needs.Date.outputs.Date }}' \
            -A '${{ vars.COLLECTOR }}-${{ needs.Date.outputs.Date }}' \
            -o ${{ vars.COLLECTOR }}-${{ needs.Date.outputs.Date }}.iso \
            ${{ vars.COLLECTOR }}-*.* *.md

      - name: Implant MD5 sum into iso
        run: implantisomd5 ${{ vars.COLLECTOR }}-${{ needs.Date.outputs.Date }}.iso

      - name: Generate ISO Hash
        run: |
          sha256sum -b ${{ vars.COLLECTOR }}-${{ needs.Date.outputs.Date }}.iso | tee \
            ${{ vars.COLLECTOR }}-${{ needs.Date.outputs.Date }}.iso.sha
          cat ${{ vars.COLLECTOR }}-${{ needs.Date.outputs.Date }}.iso.sha

      - name: Show ISO & Hash
        run: ls -Alh *.iso*

      - name: Upload ISO
        uses: actions/upload-artifact@v4
        with:
          name: ${{ vars.COLLECTOR }}-${{ needs.Date.outputs.Date }}.iso
          path: ${{ vars.COLLECTOR }}-${{ needs.Date.outputs.Date }}.iso
          if-no-files-found: error

      - name: Upload ISO Hash
        uses: actions/upload-artifact@v4
        with:
          name: ${{ vars.COLLECTOR }}-${{ needs.Date.outputs.Date }}.iso.sha
          path: ${{ vars.COLLECTOR }}-${{ needs.Date.outputs.Date }}.iso.sha

  Release:
    runs-on: ubuntu-latest
    needs: [Date, MakeISO]
    permissions:
      contents: write
      pull-requests: read
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true

      - name: Show Artifacts
        run: ls -Alh ${{ vars.COLLECTOR }}-*.*

      - name: Set up git
        run: |
          git config user.name "$(git log -n 1 --pretty=format:%an)"
          git config user.email "$(git log -n 1 --pretty=format:%ae)"

      - name: Create tag
        uses: rickstaa/action-create-tag@v1
        id: tag_create
        with:
          tag: ${{ needs.Date.outputs.Date }}
          github_token: ${{secrets.GITHUB_TOKEN}}
          tag_exists_error: false
          message: "Release for ${{ needs.Date.outputs.Date }} run"

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ vars.COLLECTOR }} ${{ needs.Date.outputs.Date }}
          tag_name: ${{ needs.Date.outputs.Date }}
          make_latest: true
          files: |
            ${{ vars.COLLECTOR }}-${{ needs.Date.outputs.Date }}*.*

  Sharepoint:
    runs-on: ubuntu-latest
    needs: [Date, MakeISO]
    permissions:
      contents: write
      pull-requests: read
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true

      - name: Show Artifacts
        run: ls -Alh ${{ vars.COLLECTOR }}-*.*

      - name: Send Files to Sharepoint
        uses: amentumservices/sharepoint-file-upload-action@pappasjfed-patch-1
        with:
          file_path: "${{ vars.COLLECTOR }}-*.*"
          host_name: ${{ secrets.SHAREPOINT_HOST }}
          site_name: ${{ secrets.SHAREPOINT_SITE }}
          upload_path: '${{ secrets.SHAREPOINT_BASEPATH }}/${{ vars.COLLECTOR }}/${{ needs.Date.outputs.Date }}'
          tenant_id: ${{ secrets.SHAREPOINT_TENANT_ID }}
          client_id: ${{ secrets.SHAREPOINT_APP_ID }}
          client_secret: ${{ secrets.SHAREPOINT_APP_SECRET }}
          login_endpoint: 'login.microsoftonline.us'
          graph_endpoint: 'graph.microsoft.us'
