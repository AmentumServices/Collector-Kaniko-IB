name: RabbitMQ IB Collector
run-name: ${{ github.actor }} is Collecting üöÄ
on: [push]
jobs:
  Skopeo:
    runs-on: ubuntu-latest
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
      - name: Get current date
        id: DATE
        run: echo "::set-output name=date::$(date '+%Y%m%d-%H%M')"
      - name: Main Skopeo Script
        run: |
          ls -lah ${{ github.workspace }}
          DATE=`date '+%Y%m%d-%H%M'`
          # install deps
          apt-get update && apt-get install -y skopeo
          skopeo login registry1.dso.mil -u ${{ vars.REGISTRY_USER }} -p ${{ secrets.REGISTRY_TOKEN }}
          skopeo login docker.io -u ${{ vars.DOCKERHUB_USER }} -p ${{ secrets.DOCKERHUB_TOKEN }}
          skopeo sync \
              --src-creds=${{ vars.REGISTRY_USER }}:${{ secrets.REGISTRY_TOKEN }} \
              --src yaml --dest dir ${{ vars.COLLECTOR }}.yml ${{ vars.COLLECTOR }}
          tar -cvzf ${{ vars.COLLECTOR }}-${{ steps.date.outputs.date }}.tgz ${{ vars.COLLECTOR }}
          ls -alh ${{ vars.COLLECTOR }}-${{ steps.date.outputs.date }}.tgz
      - name: Archive artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ vars.COLLECTOR }}-${{ steps.date.outputs.date }}.tgz
          path: ${{ vars.COLLECTOR }}-${{ steps.date.outputs.date }}.tgz
      - name: Publish Artifact
        run: |
          curl -L \
            -X PATCH \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{secrets.GITHUB_TOKEN}}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/${{ github.repository }}/releases/assets/${{ vars.COLLECTOR }}-${{ steps.date.outputs.date }}.tgz \
            -d '{"name":"${{ vars.COLLECTOR }}-${{ steps.date.outputs.date }}.tgz","label":"TGZ"}'

      - run: echo "üçè This job's status is ${{ job.status }}."
  Code:
    runs-on: ubuntu-latest
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
      - name: Get current date
        id: DATE
        run: echo "::set-output name=date::$(date '+%Y%m%d-%H%M')"
      - name: 'Bundle Repo1 code base for ${{ vars.COLLECTOR }}'
        run: |
            DATE=`date '+%Y%m%d-%H%M'`
            git submodule update --init --recursive
            git bundle create --progress ${{ vars.COLLECTOR }}-${{ steps.date.outputs.date }}.bundle --all
            ls -alht *
      - name: Archive artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ vars.COLLECTOR }}-${{ steps.date.outputs.date }}.bundle
          path: ${{ vars.COLLECTOR }}-${{ steps.date.outputs.date }}.bundle
      - name: Publish Artifact
        run: |
          curl -L \
            -X PATCH \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/${{ github.repository }}/releases/assets/${{ vars.COLLECTOR }}-${{ steps.date.outputs.date }}.bundle \
            -d '{"name":"${{ vars.COLLECTOR }}-${{ steps.date.outputs.date }}.bundle","label":"GIT Bundle"}'
            env
